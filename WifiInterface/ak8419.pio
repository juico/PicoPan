
.program clock
.wrap_target
    set pins,1     [14]
    set pins,0     [14]
.wrap

.program sync
wait 0 gpio 7       
wait 1 gpio 7       
.wrap_target
;als sync signaal omhoog gaat ook een sync signaal generen
irq clear 4 [29]    
nop [29]            
nop [29]            
.wrap

.program data_in
    pull block 
    out y,32
.wrap_target
    mov x,y  
    irq wait 5
    irq wait 4
inloop:
    in pins, 8   [14]
    in pins, 8     [13]
    jmp x--,inloop 
;    push            side 0
.wrap
.program trigger
    pull block
    out y,32
.wrap_target
    mov x,y
waitloop:
    jmp x-- waitloop
    irq wait 4  [28]
    set pins 0 [29]
    set x 7
trigb:
    jmp x-- trigb [29]
    irq clear 5       [29]
    set pins 1
.wrap
% c-sdk {
// this is a raw helper function for use by the user which sets up the GPIO output, and configures the SM to output on a particular pin
#include "hardware/pio.h"

void clock_program_init(PIO pio, uint sm, uint offset, uint clk_pin) {
   pio_gpio_init(pio, clk_pin);
   pio_sm_set_consecutive_pindirs(pio, sm, clk_pin, 1, true);
   pio_sm_config c = clock_program_get_default_config(offset);
   sm_config_set_set_pins(&c, clk_pin, 1);
   sm_config_set_clkdiv_int_frac(&c, 1,0);
   pio_sm_init(pio, sm, offset, &c);
}

void sync_program_init(PIO pio, uint sm, uint offset) {
   pio_sm_config c = sync_program_get_default_config(offset);
   sm_config_set_clkdiv_int_frac(&c, 1,0);
   pio_sm_init(pio, sm, offset, &c);
}

void data_in_program_init(PIO pio, uint sm, uint offset, uint d0_pin) {
    pio_sm_set_consecutive_pindirs(pio, sm, d0_pin, 8, false);
    pio_sm_config c = data_in_program_get_default_config(offset);
    sm_config_set_in_pins(&c, d0_pin);

    sm_config_set_in_shift(&c, false, true, 32);
    //sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_RX);
    sm_config_set_clkdiv_int_frac(&c, 1,0);
    pio_sm_init(pio, sm, offset, &c);
}

void trigger_program_init(PIO pio, uint sm, uint offset, uint trigb_pin) {
   pio_gpio_init(pio, trigb_pin);
   pio_sm_set_consecutive_pindirs(pio, sm, trigb_pin, 1, true);
   pio_sm_config c = trigger_program_get_default_config(offset);
   sm_config_set_set_pins(&c, trigb_pin, 1);
   sm_config_set_clkdiv_int_frac(&c, 1,0);
   pio_sm_init(pio, sm, offset, &c);
}
%}
